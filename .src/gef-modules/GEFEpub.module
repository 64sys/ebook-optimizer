' Gambas module file

Public Function Xhtml(strCont As String) As String ' Devuelve el Xhtml y como parametro de entrada requiere el html del contenido.

  Dim strOut As String

  strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
  strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
  strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
  strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"es\">\n"
  strOut &= "<head>\n"
  strOut &= "  <title>Title</title>\n"
  strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
  strOut &= "</head>\n"
  strOut &= "<body>\n"
  strOut &= strCont & "\n"
  strOut &= "</body>\n"
  strOut &= "</html>\n"

  Return strOut

End

Public Function Html5(strCont As String) As String ' Devuelve código Html5 y como parametro de entrada requiere el html del contenido. Digamos que solo le agrega los encabezados.

  Dim strOut As String

  strOut &= "<!DOCTYPE html>\n"
  strOut &= "<html>\n"
  strOut &= "<head>\n"
  strOut &= "<meta charset=\"utf-8\" />\n"
  strOut &= "<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
  strOut &= "<title></title>\n"
  strOut &= "</head>\n"
  strOut &= "<body>\n"

  strOut &= strCont & "\n"

  strOut &= "</body>\n"
  strOut &= "</html>\n"

  Return strOut

End

Public Function CreateEPUB(strDir As String, strFile As String) As String ''Crea un archivo epub, que basicamente es un archivo zip con contenidos y estructura especificos. El primera parametro es la ruta del directorio de maquetación y el segundo es la ruta del archivo epub.

  Dim strEpub As String

  strEpub = File.Dir(strDir) &/ "book.epub"

  If Exist(strDir) = True Then

    If Exist("/tmp/my.epub") = True Then
      Try Kill "/tmp/my.epub"
    Endif
    Wait 0.01

    If Exist(User.Home &/ "." & Application.Name &/ "mbook.sh") = False Then
      Try Copy "mbook.sh" To User.Home &/ "." & Application.Name &/ "mbook.sh"
      Wait 0.01
    Endif

    Shell "sh " & User.Home &/ "." & Application.Name &/ "mbook.sh " & strDir

    Wait 0.01

    If Exist(strEpub) Then
      Return strEpub
      Print strEpub
    Else
      Return ""
    Endif

  Endif

End

Public Function CreateOPF(stxMeta As String[], stxSec As String[], stxImg As String[]) As String ''Crea el archivo content.opf con algunos parametros que se le pasan opcionalmente.

  Dim strUUID As String
  Dim strAut As String
  Dim strTit As String
  Dim strLan As String
  Dim strMeta As String
  Dim strSec As String
  Dim strOut As String

  Dim int As Integer
  Dim strImage As String

  For Each strMeta In stxMeta

    If InStr(strMeta, "\t") > 0 Then
      Select Split(strMeta, "\t")[0]
        Case "uuid"
          strUUID = Split(strMeta, "\t")[1]
        Case "author"
          strAut = Split(strMeta, "\t")[1]
        Case "title"
          strTit = Split(strMeta, "\t")[1]
        Case "language"
          strLan = Split(strMeta, "\t")[1]

      End Select
    Endif

  Next

  strOut = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
  strOut &= "<package version=\"2.0\" unique-identifier=\"BookId\" xmlns=\"http://www.idpf.org/2007/opf\">\n"
  strOut &= "  <metadata xmlns:opf=\"http://www.idpf.org/2007/opf\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n"
  strOut &= "    <dc:identifier opf:scheme=\"UUID\" id=\"BookId\">urn:uuid:" & strUUID & "</dc:identifier>\n"
  strOut &= "    <dc:language>" & strLan & "</dc:language>\n"
  strOut &= "    <dc:author>" & strAut & "</dc:author>\n"
  strOut &= "    <dc:title>" & strTit & "</dc:title>\n"
  strOut &= "  </metadata>\n"
  strOut &= "  <manifest>\n"
  strOut &= "    <item  id=\"ncx\" href=\"toc.ncx\" media-type=\"application/x-dtbncx+xml\"/>\n"

  For int = 0 To stxSec.Max
    strSec = File.Name(stxSec[int])
    strOut &= "    <item href=\"Text/" & strSec & "\" id=\"" & strSec & "\" media-type=\"application/xhtml+xml\"/>\n"

  Next

  For int = 0 To stxImg.Max
    strImage = File.Name(stxImg[int])
    strOut &= "    <item href=\"Images/" & strImage & "\" id=\"" & strImage & "\" media-type=\"image/png\"/>\n"

  Next

  strOut &= "  </manifest>\n"
  strOut &= "  <spine toc=\"ncx\">\n"

  For int = 0 To stxSec.Max
    strSec = File.Name(stxSec[int])
    strOut &= "    <itemref  idref=\"" & strSec & "\"/>\n"
  Next

  strOut &= "  </spine>\n"
  strOut &= "  <guide>\n"
  strOut &= "  </guide>\n"
  strOut &= "</package>\n"

  Return strOut

End

Public Function ContainerCreate() As String ''Crea el archivo container.xml con algunos parametros que se le pasan opcionalmente.

  Dim strOut As String

  strOut = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
  strOut &= "<container version=\"1.0\" xmlns=\"urn:oasis:names:tc:opendocument:xmlns:container\">\n"
  strOut &= "    <rootfiles>\n"
  strOut &= "        <rootfile full-path=\"OEBPS/content.opf\" media-type=\"application/oebps-package+xml\"/>\n"
  strOut &= "   </rootfiles>\n"
  strOut &= "</container>\n"

  Return strOut

End

Public Function ContainerRead() As String[] ''Lee el archivo container.xml para crear una matriz de texto con los datos.

  Dim stxOut As New String[] ' Lista de la forma [TAG]\t [VAL]

  Return stxOut

End

Public Function BaseSections() As String[] '' Crea una lista con la secciones basicaas de un libro.

  Dim stxOut As New String[]

  stxOut.Add("cover")
  stxOut.Add("synopsis")
  stxOut.Add("title")
  stxOut.Add("info")
  stxOut.Add("presentation")
  stxOut.Add("dedication")
  stxOut.Add("thanks")
  stxOut.Add("epilogue")
  stxOut.Add("author")

  Return stxOut

End

Public Function SectionMaker(strSec As String, stxItems As String[]) As String '' Crea una seccion basica de un libro y como parametro de entrada requiere una matriz de texto donde cada item sea de la forma Tag\tValue, como por ejemplo autor\tJorge Luis Borges.

  Dim strOut As String
  Dim strTag, strVal As String
  Dim int As Integer
  Dim strAuthor As String
  Dim strSubtitle As String
  Dim strDate As String
  Dim strBiography As String
  Dim strEpilogue As String
  Dim strTanks As String
  Dim strTitle As String
  Dim strSynopsis As String
  Dim strChapter As String
  Dim strContent As String ' Todos los parrafos del capítulo en formato HTML, h1,h2,h3,h4,h5,h6,p

  For int = 0 To stxItems.Max

    If InStr(stxItems[int], "\t") > 0 Then
      strTag = Split(stxItems[int], "\t")[0]
      strVal = Split(stxItems[int], "\t")[1]

      Select strTag
        Case "creator"
          strAuthor = Split(stxItems[int], "\t")[1]
        Case "synopsis"
          strSynopsis = Split(stxItems[int], "\t")[1]
        Case "title"
          strTitle = Split(stxItems[int], "\t")[1]
        Case "subtitle"
          strSubtitle = Split(stxItems[int], "\t")[1]
        Case "date"
          strDate = Split(stxItems[int], "\t")[1]
        Case "biography"
          strBiography = Split(stxItems[int], "\t")[1]
        Case "epilogue"
          strEpilogue = Split(stxItems[int], "\t")[1]
        Case "tanks"
          strTanks = Split(stxItems[int], "\t")[1]
        Case "chapter"
          strChapter = Split(stxItems[int], "\t")[1]
        Case "content"
          strContent = Split(stxItems[int], "\t")[1]

      End Select

    Endif

  Next

  strOut = ""

  Select strSec

    Case "chapter"
      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"es\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title>Title</title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "<body>\n"
      strOut &= "\n"
      strOut &= "  <h2>" & strChapter & "</h2>\n"
      strOut &= "\n"
      strOut &= strContent & "\n"
      strOut &= "\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "cover"
      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title></title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body class=\"sinmargen\">\n"
      strOut &= "  <h1 class=\"cubierta\" title=\"" & ("Cubierta") & "\"><img alt=\"\" src=\"../Images/cover.jpg\" /></h1>\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "synopsis"

      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title></title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body>\n"
      strOut &= "  <p>&nbsp;</p>\n"
      strOut &= "\n"
      strOut &= "  <div class=\"sinopsis\">\n"
      strOut &= "    <p>" & strSynopsis & "</p>\n"
      strOut &= "  </div>\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "title"
      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title></title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body>\n"
      strOut &= "  <p class=\"tlogo\"><span><img alt=\"\" src=\"../Images/EPL_logo.png\" width=\"100%\" /></span></p>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"tautor\"><code class=\"sans\">" & strAuthor & "</code></p>\n"
      strOut &= "\n"
      strOut &= "  <h1 class=\"ttitulo\"><strong class=\"sans\">" & strTitle & "</strong></h1>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"tsubtitulo\"><strong class=\"sans\">" & strSubtitle & "</strong></p>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"trevision\"><strong class=\"sans\">ePUB r1.1</strong></p>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"tfirma\"><strong class=\"sans\">betatron</strong> <code class=\"tfecha sans\">" & strDate & "</code></p>\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "info"
    Case "presentation"
    Case "dedication"
    Case "thanks"
      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"es\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title>Agradecimientos</title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body>\n"
      strOut &= "  <h1>" & ("Agradecimientos") & "</h1>\n"
      strOut &= "\n"
      strOut &= "  <p><em>" & strTanks & "</em></p>\n"
      strOut &= "\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "epilogue"

      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"es\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title>Epílogo</title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body>\n"
      strOut &= "  <h1>Epílogo</h1>\n"
      strOut &= "\n"
      strOut &= "  <p>" & strEpilogue & "</p>\n"
      strOut &= "\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

    Case "author"

      strOut = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n"
      strOut &= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"
      strOut &= "  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n"
      strOut &= "\n"
      strOut &= "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n"
      strOut &= "<head>\n"
      strOut &= "  <title></title>\n"
      strOut &= "  <link href=\"../Styles/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n"
      strOut &= "</head>\n"
      strOut &= "\n"
      strOut &= "<body>\n"
      strOut &= "  <h1 class=\"oculto\" title=\"Autor\"></h1>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"autorimg\"><img alt=\"\" height=\"100%\" src=\"../Images/autor.jpg\" /></p>\n"
      strOut &= "\n"
      strOut &= "  <p class=\"salto25 asangre\">" & strBiography & "</p>\n"
      strOut &= "\n"
      strOut &= "</body>\n"
      strOut &= "</html>\n"

  End Select

  Return strOut

End

Public Function CreateContentTagsNames() As String[] ''Crea una lista de las etiquetas de metadatos que se utilizaran en el archivo content.opf de un epub.

  Dim stxOut As New String[]

  stxOut.Clear

  ' Required terms
  stxOut.Add("title")
  stxOut.Add("subtitle")
  stxOut.Add("language")
  stxOut.Add("identifier")

  ' Optional terms
  stxOut.Add("creator")
  stxOut.Add("contributor")
  stxOut.Add("publisher")
  stxOut.Add("subject")
  stxOut.Add("description")
  stxOut.Add("date")
  stxOut.Add("type")
  stxOut.Add("format")
  stxOut.Add("source")
  stxOut.Add("relation")
  stxOut.Add("coverage")
  stxOut.Add("rights")

  Return stxOut

End

Public Function CreateContentTagsTitles() As String[] ''Crea una lista con los títulos de las etiquetas de metadatos de un epub.

  Dim stxOut As New String[]

  stxOut.Clear

  ' Required terms
  stxOut.Add(("Título"))              ' Titulo de la obra
  stxOut.Add(("Subtítulo"))           ' Subtitulo de la obra
  stxOut.Add(("Idioma"))            ' RFC 3066 Language Identifiers
  stxOut.Add(("Identificador"))       ' URI or ISBN would be good choices

  ' Optional terms
  stxOut.Add(("Autor principal"))               ' El autor principal del trabajo
  stxOut.Add(("Contribuidor"))        ' Esto identifica a otras personas que tuvieron un papel menos importante, como escribir el preludio o ilustrar dónde las imágenes juegan un papel menor en la publicación. Esta entrada también puede incluir un atributo que define el rol. Tenga en cuenta que Book producer (bkp) sería un buen rol para la persona que creó el ePub desde otra fuente.
  stxOut.Add(("Editor de la obra"))              ' Examples of Publisher include a person, an organization, or a service.
  stxOut.Add(("Grupo temático"))                ' No standard form but it could use the Library of Congress Subject Heading System for example.
  stxOut.Add(("Descripción"))         ' Este campo normalmente contiene la descripción que se utiliza para describir el contenido del libro en un sitio minorista o comunicado de prensa.
  stxOut.Add(("Fecha de publicacion"))               ' ISO 8601 YYYY[-MM[-DD]]
  stxOut.Add(("Genero, categoría"))                ' general categories, functions, genres
  stxOut.Add(("Formato") & " mimetype")             ' Mimetype"
  stxOut.Add(("Derivacion de") & "...")              ' Información sobre una fuente anterior del que se deriva la publicación.
  stxOut.Add(("Fuentes auxiliares"))         ' Fuente auxiliar y su relación con la publicación.
  stxOut.Add(("Alcance"))             ' La extensión o el alcance del contenido de la publicación.
  stxOut.Add(("Derechos"))            ' copyright, CC creative commons, public domain, etc.

  Return stxOut

End

Public Function CreateContentTagsTooltips() As String[] ''Crea una lista con la infotmacion emergente "Tool Tip" para cada dato.

  Dim stxOut As New String[]

  stxOut.Clear

  ' Required terms
  stxOut.Add(("Titulo de la obra"))
  stxOut.Add(("Subtitulo de la obra"))
  stxOut.Add(("Idioma en que esta escrita la obra que sigue el estándar RFC 3066"))
  stxOut.Add(("Identificador único, URI o ISBN pueden ser buenas opciones"))

  ' Optional terms
  stxOut.Add(("El autor principal del trabajo"))
  stxOut.Add(("Esto identifica a otras personas que tuvieron un papel menos importante, como escribir el preludio o ilustrar dónde las imágenes juegan un papel menor en la publicación. Esta entrada también puede incluir un atributo que define el rol. Tenga en cuenta que Book producer (bkp) sería un buen rol para la persona que creó el ePub desde otra fuente."))
  stxOut.Add(("Una persona, una organización o un servicio que edito el libro"))
  stxOut.Add(("El grupo temático no tiene una forma estándar"))
  stxOut.Add(("Este campo normalmente contiene la descripción que se utiliza para describir el contenido del libro en un sitio minorista o comunicado de prensa."))
  stxOut.Add(("Fecha") & " ISO 8601 YYYY[-MM[-DD]]")
  stxOut.Add(("Categorías generales, funciones, géneros"))
  stxOut.Add(("Formato") & " mimetype")
  stxOut.Add(("Fuente anterior del que se deriva la publicación."))
  stxOut.Add(("Fuente auxiliar y su relación con la publicación."))
  stxOut.Add(("La extensión o el alcance del contenido de la publicación."))
  stxOut.Add(("Copyright, CC creative commons, public domain, etc."))

  Return stxOut

End

Public Function Genres() As String[] '' Crea una lista de generos literarios

  Dim stxOut As New String[]

  stxOut.Add("Fiction:Action")
  stxOut.Add("Fiction:Children")
  stxOut.Add("Fiction:Fantasy")
  stxOut.Add("Fiction:Historical Fiction")
  stxOut.Add("Fiction:Horror")
  stxOut.Add("Fiction:Humor")
  stxOut.Add("Fiction:Mystery and Crime")
  stxOut.Add("Fiction:Other fiction")
  stxOut.Add("Fiction:Romance")
  stxOut.Add("Fiction:Science Fiction")
  stxOut.Add("Fiction:Short Fiction")
  stxOut.Add("Fiction:Young Adult")
  stxOut.Add("Fiction:Westerns")
  stxOut.Add("Nonfiction:Biography")
  stxOut.Add("Nonfiction:History")
  stxOut.Add("Nonfiction:Philosophy")
  stxOut.Add("Nonfiction:Reference")
  stxOut.Add("Nonfiction:Spiritual")
  stxOut.Add("Nonfiction:Other nonfiction")
  stxOut.Add("Poetry")
  stxOut.Add("Other:Biographical Fiction")
  stxOut.Add("Other:Collected Works")
  stxOut.Add("Other:Graphic")

  Return stxOut

End

' Public Function ContentBasicData(Optional stx As String[]) As String[] ''Devuelve una matriz con los metadatos basicos de un archivo content.opf de un contenedor EPUB.
' 
'   Dim stxOut As New String[]
' 
'   Select stx.Count
'     Case 0
'       'Skip
'     Case Else
' 
'   End Select
' 
'   Return stxOut
' 
' End

Public Function ContentRead(strPath As String) As String[] ''Devuelve una matriz con los metadatos extraídos del archivo content.opf de un contenedor EPUB.

  Dim stxOut As New String[]
  Dim strXml As String

  If Exist(strPath) = True Then

    Shell "unzip -p '" & strPath & "' OEBPS/content.opf 2>&1" To strXml

    If InStr(strXml, "caution: filename not matched:  OEBPS/content.opf") > 0 Then
      Shell "unzip -p '" & strPath & "' OPS/content.opf 2>&1" To strXml
      stxOut = GEFXml.XmlTagValue(strXml)
    Else
      stxOut = GEFXml.XmlTagValue(strXml)
    Endif
  Endif

  Return stxOut

End


Public Function CreateContainerTagsNames() As String[] ''Crea una lista de las etiquetas de metadatos que se utilizaran en el archivo container.xml (oasis) de un epub.

  Dim stxOut As New String[]

  stxOut.Clear

  ' Required terms
  stxOut.Add("rootfiles")
  

  Return stxOut

End